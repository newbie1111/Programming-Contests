#!/usr/bin/env python3
# from typing import *

YES = 'Yes'
NO = 'No'


# def solve(N: int, t: List[int], x: List[int], y: List[int]) -> str:
def solve(N, T, X, Y):
    def manhattan_distance(a, b):
        return abs(a[0] - b[0]) + abs(a[1] - b[1])

    t_now = 0
    c_now = (0, 0)

    for t, x, y in zip(T, X, Y):
        t_diff = t - t_now
        c_next = (x, y)
        dist = manhattan_distance(c_now, c_next)

        if dist <= t_diff and (t_diff - dist) % 2 == 0:
            t_now = t
            c_now = c_next
        else:
            return NO

    return YES


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    t = [None for _ in range(N)]
    x = [None for _ in range(N)]
    y = [None for _ in range(N)]
    for i in range(N):
        t[i], x[i], y[i] = map(int, input().split())
    a = solve(N, t, x, y)
    print(a)


if __name__ == '__main__':
    main()
