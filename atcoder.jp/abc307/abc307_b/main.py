#!/usr/bin/env python3
# from typing import *
import itertools

YES = 'Yes'
NO = 'No'


def is_kaibun(s):
    for i in range(len(s)):
        # print(s[i], s[-(i+1)])
        if s[i] != s[-(i+1)]:
            return False
    else:
        return True


# def solve(N: int, S: List[str]) -> str:
def solve(N, S):
    for x, y in itertools.permutations(range(N), 2):
        # print(x, y, S[x] + S[y])
        if is_kaibun(S[x] + S[y]):
            return YES
    else:
        return NO


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    S = [None for _ in range(N)]
    for i in range(N):
        S[i] = input()
    a = solve(N, S)
    print(a)


if __name__ == '__main__':
    main()
