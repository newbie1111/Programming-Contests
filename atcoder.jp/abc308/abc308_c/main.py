#!/usr/bin/env python3
# from typing import *

import operator
import sys
# def solve(N: int, A: List[int], B: List[int]) -> List[str]:
from functools import cmp_to_key


def cmp(i, j):
    ai, aj, ii = i
    bi, bj, jj = j
    s = ai * bj - aj * bi
    return 1 if s > 0 else -1 if s < 0 else 0


def solve(N, A, B):
    ans = sorted([(i, t[0] / (t[0] + t[1]))
                 for i, t in enumerate(zip(A, B), 1)], key=operator.itemgetter(1), reverse=True)
    # print(ans, file=sys.stderr)
    return [t[0] for t in ans]


def solve2(N, A, B):
    return [x[-1]
            for x in sorted([(-t[0], t[0]+t[1], i)
                             for i, t in enumerate(zip(A, B), 1)],
                            key=cmp_to_key(cmp))
            ]


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)


def main():
    N = int(input())
    A = [None for _ in range(N)]
    B = [None for _ in range(N)]
    for i in range(N):
        A[i], B[i] = map(int, input().split())
    ans = solve2(N, A, B)
    print(*[ans[i] for i in range(N)])


if __name__ == '__main__':
    main()
