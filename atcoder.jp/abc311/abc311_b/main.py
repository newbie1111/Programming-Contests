#!/usr/bin/env python3
# from typing import *


# def solve(N: int, D: int, S: List[str]) -> int:
def solve(N, D, S):
    cnt = []
    ans = 0
    for _ in range(D):
        cnt.append(0)

    for S_i in range(N):
        for S_ij in range(D):
            if S[S_i][S_ij] == "o":
                cnt[S_ij] += 1

    # print(ans)

    for i in range(D):
        for j in range(i, D):
            if cnt[j] == N:
                dist = j - i + 1
                if ans < dist:
                    ans = dist
            else:
                break

    return ans


def solve2(N, D, S):
    cnt = [sum(1 for i in range(N) if S[i][d] == "o") for d in range(D)]
    ans = 0

    for left in range(D):
        for right in range(left, D):
            if cnt[right] == N:
                ans = max(ans, right - left + 1)
            else:
                break

    return ans


def solve3(N, D, S):
    cnt = [sum(1 for i in range(N) if S[i][d] == "o") for d in range(D)]
    ans = 0
    cur = 0

    for i in range(D):
        if cnt[i] == N:
            cur += 1
        else:
            cur = 0
        ans = max(ans, cur)

    return ans

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)


def main():
    N, D = map(int, input().split())
    S = [None for _ in range(N)]
    for i in range(N):
        S[i] = input()
    a = solve3(N, D, S)
    print(a)


if __name__ == '__main__':
    main()
